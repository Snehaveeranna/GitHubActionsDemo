const fs = require('fs');
const path = require('path');
const sgMail = require('@sendgrid/mail');
const { execSync } = require('child_process');

// Set SendGrid API key
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

// Construct the path to the directory where artifacts are stored
const artifactsDirectory = path.join(process.env.GITHUB_WORKSPACE, 'apidog-reports');

// Read the contents of the directory
const files = fs.readdirSync(artifactsDirectory);

// Find the file with the name starting with "apidog-report-"
const reportFile = files.find(file => file.startsWith('apidog-report-'));

if (reportFile) {
    // Construct the path to the JSON report file
    const jsonReportPath = path.join(artifactsDirectory, reportFile);

    // Construct the command to run Newman with the JSON report file
    const newmanCommand = `newman run ${jsonReportPath} --reporters cli,json --reporter-json-export newman-report.json`;

    try {
        // Execute Newman command to check for test failures
        execSync(newmanCommand, { stdio: 'inherit' });

        // Read the JSON report generated by Newman
        const newmanReport = JSON.parse(fs.readFileSync(path.join(__dirname, 'newman-report.json'), 'utf-8'));

        // Check if there are any test failures
        if (newmanReport.run.failures.length === 0) {
            // No test failures, proceed with generating HTML Extra report
            const htmlExtraCommand = `newman run ${jsonReportPath} --reporters cli,htmlextra --reporter-htmlextra-export newman-report.html`;
            execSync(htmlExtraCommand, { stdio: 'inherit' });
            console.log('Newman HTML Extra report generated successfully.');

            // Read the HTML report generated by Newman
            const htmlReportPath = path.join(__dirname, 'newman-report.html');
            const htmlReport = fs.readFileSync(htmlReportPath, 'utf-8');

            // Attach the HTML report to the email
            const msg = {
                to: 'snehav@anthology.com', // Change this to the recipient's email address
                from: 'ivpnotifications@products.anthology.com', // Change this to your verified sender email in SendGrid
                subject: 'APIdog Test Report',
                text: 'APIdog test report is attached.',
                attachments: [
                    {
                        content: htmlReport,
                        filename: 'newman_report.html',
                        type: 'text/html',
                        disposition: 'attachment',
                    },
                ],
            };

            // Send email
            sgMail
                .send(msg)
                .then(() => {
                    console.log('Email sent successfully');
                })
                .catch((error) => {
                    console.error('Error occurred while sending email:', error.response?.body || error.message);
                });
        } else {
            // Test failures found, log the error
            console.error('Test failures found. Skipping HTML Extra report generation.');
        }
    } catch (error) {
        console.error('Error occurred while executing Newman:', error);
    }
} else {
    console.error('No report file found.');
}
